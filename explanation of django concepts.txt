Nathan's rough explanation of different files. Very rough - Mostly done through memory.
 
FILE EXPLANATIONS: package-mangaer/package-mangaer/deploy
	forms.py --> Where HTML stuff is created through django. Lets django keep track of what is in different HTML elements
	utils/utils.py --> Where we kept a lot of the functions dealing with AWS.
	urls.py --> regex for creating the actual URLs for each page.
	views.py --> where we request HTML responses and stuff.
	models.py --> Where we create classes that we'll eventually use.
	settings.py --> where we keep passwords and secret keys and installed/installed apps.
	
	package-mangaer/package-mangaer/deploy/templates/deploy --> where all the html is pulling from forms.py and stuff.

READ TEST FILES
    for a good idea of how models/services/views work go to the tests folder and read those files.

CSS/JS
    static folder has the css and js we hook into

MIGRATIONS: 
    migrations are complicated... Basically when a model is updated you need to migrate. 
    During my internship I ran into lots of problems with migrations. Hopefully we don't have issues.

CREATION OF DJANGO WEBAPP:
    BOOTSTRAP:
        what you do to basically "kickstart" the app. You do it on a clean virtual environment, and it creates a bunch of stuff django needs.
    
    VIRTUALENV:
        When you bootstrap the django app you do it in a virtual environment. This is so that it can pip install everything and none of your personal stuff conflicts with your web app.
        You use commands like mkvirtualenv to make a virtual environment. There's lots of documentation on it somewhere.
    
    PIP INSTALL:
        basically when you run bootstrap django will go through and read the conf/requirements.txt file and pip install everything there in that specific version.
